@{
    Layout = "_Custom";
}
@* <link rel="stylesheet" href="~/lib/kendo/kendo.default-v2.min.css"> *@

<!-- Menu Section-->
<section class="main-section-menu bg-light bb-1">
    <ul class="main-section-menu-ul" id="mainSectionMenu">
        <li><a asp-action="Task" id="iAuditInspection" class="ms-menu-link active">Task</a></li>
        <li><a asp-action="Messages" id="iAuditAnalytics" class="ms-menu-link">Messages</a></li>
        <li><a asp-action="Settings" id="iAuditAnalytics" class="ms-menu-link">Settings</a></li>
        <li><a asp-action="Password" id="iAuditAnalytics" class="ms-menu-link ">Change Password</a></li>
        <li><a id="logout" class="ms-menu-link">Logout</a></li>
    </ul>
</section>
<!--// Menu Section-->

<div class="d-flex dashboard-wrapper justify-content-center  h100">
    <div class="dashboard-left d-flex flex-column">
        <!-- Daily Activity -->
        @* <div class="dashboard-daily-activity">
            <div class="dashboard-daily-activity-wrapper ">
                <ul class="dashboard-daily-activity-wrapper-ul justify-content-center d-flex flex-wrap">
                    <li class="dashboard-daily-activity-item border daily-item-success">
                        <div class="d-flex align-items-center">
                            <span class="daily-acitivity-icon"><i class="icon-agentinfoon"></i></span>
                            <span class="daily-acitivity-count">2</span>
                        </div>
                        <div class="daily-acitivity-title text-dark ellipsis">Total Task</div>
                    </li>
                    <li class="dashboard-daily-activity-item border daily-item-green">
                        <div class="d-flex align-items-center">
                            <span class="daily-acitivity-icon"><i class="icon-clock"></i></span>
                            <span class="daily-acitivity-count">3</span>
                        </div>
                        <div class="daily-acitivity-title text-dark ellipsis">Pending Task</div>
                    </li>
                    <li class="dashboard-daily-activity-item border daily-item-brown">
                        <div class="d-flex align-items-center">
                            <span class="daily-acitivity-icon"><i class="icon-invite-user"></i></span>
                            <span class="daily-acitivity-count">5</span>
                        </div>
                        <div class="daily-acitivity-title text-dark ellipsis">Complete Task</div>
                    </li>
                </ul>
            </div>
        </div> *@
        <!--// Daily Activity -->


        <!-- Todo Activity -->
        <div class="todo-inspection-activity-wrapper flex-1 ">
            <div class="d-flex flex-wrap dashboard-row h100">
                <div class="todo-activity-wrapper dashboard-column-100 d-flex flex-column h100">
                    <h4 class="title font-semi-bold fs-16 text-dark pb-10">Task List</h4>

                    <div class="grid-wrapper h100 dataimport-grid">
                        <div id="taskGrid"></div>
                        <div id="Dataimportgrid-pager" class="with-more-option"></div>
                    </div>
                </div>
            </div>
        </div>
        <!--// Todo Activity -->
        <!-- User an Existing Inspection Template -->
    </div>
</div>

@* Edit Task model *@
<div id="edit-window-table">
    <div class="window-wrapper">
        <form>
            <input hidden type="text" id="taskId">
            <div class="form-group">
                <label>Task Title</label>
                <input disabled id="UpdateTaskTitle" type="text" class="form-control" title="table name">
            </div>
            <div class="form-group mb-10">
                <label for="UpdateautoComplete">Select Member</label>
                <input disabled id="UpdateautoComplete" class="form-control border b-1" title="date timepicker" />
            </div>
            <div class="form-group mb-10">
                <label for="Updatestartdatetimepicker">Start Date Timepicker</label>
                <input disabled id="Updatestartdatetimepicker" class="form-control" title="date timepicker" />
            </div>
            <div class="form-group mb-10">
                <label for="Updateenddatetimepicker">End Date Timepicker</label>
                <input disabled id="Updateenddatetimepicker" class="form-control" title="date timepicker" />
            </div>
            <div class="form-group mb-10">
                <label for="Updatestatus">Update Status</label>
                <select id="Updatestatus" class="form-control">
                    <option value="">Select Status</option>
                    <option value="Complete">Complete</option>
                    <option value="In Progress">In Progress</option>
                    <option value="Pending">Pending</option>
                </select>
            </div>
            <div class="form-group">
                <label>Description <span class="text-muted">(Optional)</span></label>
                <textarea disabled id="UpdatetaskDescription" class="form-control" rows="4" placeholder="Write here"
                    title="description"></textarea>
            </div>
        </form>
    </div>
    <div class="window-footer">
        <a class="btn btn-trans close-window">Cancel</a><a id="updateTaskBtn" class="btn btn-primary"
            type="button">Save</a>
    </div>
</div>


@* Edit Task *@
<script>
    $("#edit-window-table").kendoWindow({
        width: 450,
        title: "Edit Task",
        visible: false,
        draggable: false,
        resizable: false,
        actions: [
            "Close"
        ],
        modal: true
    }).data("kendoWindow");
    $(document).on('click', '.btn-edit-task', function () {
        $("#edit-window-table").data("kendoWindow").center().open();
    });
</script>
@* Change in API call *@
<script>
    var userData = JSON.parse(sessionStorage.getItem("User"))
    console.log(userData);
    $(document).ready(function () {
        // Fetch Data from API
        var taskDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "http://localhost:5136/api/task/task?userId=" + userData.c_uid,
                    dataType: "json"
                }
            },
            pageSize: 5,
            schema: {
                model: {
                    id: "c_tid",
                    fields: {
                        c_tid: { type: "number" },
                        c_uid: { type: "number" },
                        c_task_title: { type: "string" },
                        c_description: { type: "string" },
                        c_start_date: { type: "date" },
                        c_end_date: { type: "date" },
                        c_task_status: { type: "string" }
                    }
                }
            }
        });

        // Initialize Kendo Grid
        $("#taskGrid").kendoGrid({
            dataSource: taskDataSource,
            height: 400,
            pageable: {
                refresh: true,
                pageSizes: [5, 10, 20],
                buttonCount: 3
            },
            groupable: true,
            sortable: true,
            filterable: true,
            resizable: true,
            columns: [
                { field: "c_tid", title: "Task ID", width: 80 },
                { field: "c_uid", title: "User ID", width: 80 },
                { field: "c_task_title", title: "Task Title", width: 150 },
                { field: "c_description", title: "Description", width: 200 },
                {
                    field: "c_start_date",
                    title: "Start Date",
                    width: 120,
                    format: "{0:yyyy-MM-dd}"
                },
                {
                    field: "c_end_date",
                    title: "End Date",
                    width: 120,
                    format: "{0:yyyy-MM-dd}"
                },
                { field: "c_task_status", title: "Status", width: 100 },
                {
                    title: "Actions",
                    template: "<button class='btn-edit-task btn btn-warning btn-sm'><i class='icon-edit'></i></button>",
                    width: 120
                }
            ],
            dataBound: function () {
                $(".btn-edit-task").click(function () {
                    var grid = $("#taskGrid").data("kendoGrid");
                    var row = $(this).closest("tr");
                    var dataItem = grid.dataItem(row);

                    if (dataItem) {
                        $("#taskId").val(dataItem.c_tid);
                        $("#UpdateTaskTitle").val(dataItem.c_task_title);
                        $("#UpdateautoComplete").val(dataItem.c_uid);
                        $("#Updatestartdatetimepicker").val(new Date(dataItem.c_start_date).toISOString().slice(0, 16));
                        $("#Updateenddatetimepicker").val(new Date(dataItem.c_end_date).toISOString().slice(0, 16));
                        $("#UpdatetaskDescription").val(dataItem.c_description);
                    }
                });

                $(".btn-edit-task").click(function () {
                    var grid = $("#taskGrid").data("kendoGrid");
                    var row = $(this).closest("tr");
                    var dataItem = grid.dataItem(row);

                    console.log(dataItem)
                });
            },
            scrollable: true
        });

        // Initialize Pager
        $("#taskPager").kendoPager({
            dataSource: taskDataSource
        });
    });
    // Update Task
    var userData = JSON.parse(sessionStorage.getItem("User"));
    $("#updateTaskBtn").click(function () {
        let updatedTask = {
            c_tid: $("#taskId").val(),
            c_uid: parseInt(userData.c_uid) ,  // Assuming this input holds user ID
            c_task_title: $("#UpdateTaskTitle").val(),
            c_start_date: new Date($("#Updatestartdatetimepicker").val()).toISOString(), // Convert to ISO format
            c_end_date: new Date($("#Updateenddatetimepicker").val()).toISOString(),
            c_description: $("#UpdatetaskDescription").val(),
            c_task_status: $("#Updatestatus").val() // Default status
        };

        $.ajax({
            url: "http://localhost:5136/api/task/update",
            type: "PUT",
            contentType: "application/json",
            data: JSON.stringify(updatedTask),
            success: function (response) {
                console.log(response);
                alert(response.message);
                $("#taskGrid").data("kendoGrid").dataSource.read();
            },
            error: function (xhr) {
                alert("Error updating task: " + xhr.responseText);
            }
        });
    });
</script>
<script>
    $(document).ready(function () {
        $("#logout").on("click", function () {
            let email = sessionStorage.getItem("userEmail");
            console.log("Logout email:- " + email);
            $.ajax({
                url: "http://localhost:5136/api/UserApi/logout?userEmail=" + email,
                type: "POST",
                processData: false,
                contentType: false,
                success: function (response) {
                    @* if (response.success) { *@
                        window.location.href = "../Home/Login"
                    @* } *@
                    },
                error: function (xhr, status, error) {
                    console.error("Failed to logout. Error:", error);
                }
            })
        })
    })

</script>