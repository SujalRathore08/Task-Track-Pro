@{
    ViewData["Title"] = "Chat Page";
    @* Layout="../Shared/_TaskTrackProLayout.cshtml"; *@
}

<style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .chat-container {
            width: 100%;
            max-width: 400px;
            background: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            padding: 16px;
        }

        .chat-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 2px solid #eee;
            padding-bottom: 10px;
            margin-bottom: 10px;
        }

        .chat-header h2 {
            font-size: 18px;
            color: #333;
            margin: 0;
        }

        .chat-header span {
            font-size: 12px;
            color: #28a745;
        }

        .dropdown {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 14px;
            margin-bottom: 8px;
            cursor: pointer;
        }

        .chat-box {
            display: flex;
            flex-direction: column;
            gap: 10px;
            height: 300px;
            overflow-y: auto;
            background: #fafafa;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
        }

        .message {
            display: flex;
            align-items: center;
            max-width: 70%;
        }

        .message img {
            width: 32px;
            height: 32px;
            border-radius: 50%;
        }

        .message-content {
            padding: 10px;
            border-radius: 8px;
            font-size: 14px;
            word-wrap: break-word;
        }

        .received {
            background: #ddd;
            text-align: left;
        }

        .sent {
            background: #007bff;
            color: white;
            text-align: right;
            margin-left: auto;
        }

        .timestamp {
            font-size: 12px;
            color: gray;
            margin-top: 4px;
            display: block;
        }

        .chat-input {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-top: 10px;
            border-top: 1px solid #ddd;
            padding-top: 10px;
        }

        .chat-input input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 14px;
            outline: none;
        }

        .chat-input button {
            background: #007bff;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: 0.3s;
        }

        .chat-input button:hover {
            background: #2d6db3;
        }
    </style>

<div class="chat-container">
        <div class="chat-header">
            <h2>Chat</h2>
            <span>Online</span>
        </div>

        <select id="users" class="dropdown">
            <option value="" selected disabled>-- Select User/Admin --</option>
        </select>

        <select id="online-users" class="dropdown">
            <option value="" selected disabled>-- Online Users --</option>
        </select>

        <div class="chat-box" id="chatBox">
            <div class="message received">
                <img src="https://i.pravatar.cc/40" alt="User Avatar">
                <div class="message-content received">
                    <p>Hello! How are you?</p>
                    <span class="timestamp">10:30 AM</span>
                </div>
            </div>

            <div class="message sent">
                <div class="message-content sent">
                    <p>I'm doing great! What about you?</p>
                    <span class="timestamp">10:32 AM</span>
                </div>
                <img src="https://i.pravatar.cc/41" alt="User Avatar">
            </div>
        </div>

        <div class="chat-input">
            <input type="text" id="messageInput" placeholder="Type a message...">
            <button id="sendBtn">Send</button>
        </div>
    </div>


<!-- SignalR & jQuery -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
    @* let userId = sessionStorage.getItem("userEmail"); *@
            let userId = "dhruvil@gmail.com";
        let otherUserId = "";

        if (!userId) {
            alert("User not logged in. Redirecting to login page.");
            window.location.href = "/Login";
            return;
        }

        let connection = new signalR.HubConnectionBuilder()
            .withUrl(`http://localhost:5136/chathub?userId=${userId}`)
            .configureLogging(signalR.LogLevel.Information)
            .build();


        connection.start()
            .then(() => console.log("Connected to SignalR"))
            .catch(err => console.error("SignalR Connection Error:", err));


        function loadUsers() {
            $.ajax({
                url: "http://localhost:5136/api/Admin/users",
                type: "GET",
                success: function (response) {
                    if (!response.success) {
                        console.error("Error loading users:", response.message);
                        return;
                    }
                    let usersDropdown = $("#users");
                    usersDropdown.empty().append('<option value="" selected disabled>-- Select User/Admin --</option>');

                    response.users.forEach((user) => {
                        let option = `<option value="${user.c_Email}">${user.c_Email}</option>`;
                        usersDropdown.append(option);
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Failed to load users. Error:", error);
                }
            });
        }
        function loadOnlineUsers() {
            $.ajax({
                url: "http://localhost:5136/api/Chat/GetOnlineUsers",
                type: "GET",
                success: function (response) {
                    if (!response.success) {
                        console.error("Error loading online users:", response.message);
                        return;
                    }
                    let usersDropdown = $("#online-users");
                    usersDropdown.empty().append('<option value="" selected disabled>-- Online Users --</option>');

                    response.onlineUsers.forEach((user) => {
                        let option = `<option value="${user}" disabled>${user}</option>`;
                        usersDropdown.append(option);
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Failed to load online users. Error:", error);
                }
            });
        }
        $("#users").change(function () {
            otherUserId = $(this).val();
            loadMessages();
        });

        function loadMessages() {
            if (!otherUserId) return;

            $.ajax({
                url: "http://localhost:5136/api/chat/history",
                type: "GET",
                data: { userId: userId, otherUserId: otherUserId },
                success: function (response) {
                    console.log(response);
                    if (!response.success) {
                        console.error("Error loading chat:", response.message);
                        return;
                    }

                    let chatBox = $("#chatBox");
                    chatBox.empty();
                    let lastDate = "";

                    response.data.forEach(msg => {
                        let messageDate = new Date(msg.timestamp).toLocaleDateString();
                        let messageTime = new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

                        if (messageDate !== lastDate) {
                            chatBox.append(`<div class="date-separator">${messageDate}</div>`);
                            lastDate = messageDate;
                        }

                        let isSender = msg.senderId === userId;
                        let messageHtml = `<div class="message ${isSender ? 'sent' : 'received'}">` +
                            `<p><b>${isSender ? "You" : msg.senderId}:</b> ${msg.content} <sub class="msg-time">${messageTime}</sub></p></div>`;

                        chatBox.append(messageHtml);
                    });

                    chatBox.scrollTop(chatBox[0].scrollHeight);
                },
                error: function (xhr, status, error) {
                    console.error("Failed to load chat messages. Error:", error);
                }
            });
        }

        loadUsers();
        loadOnlineUsers();
        connection.on("ReceiveMessage", function (senderId, message) {
            if (senderId !== otherUserId && senderId !== userId) return;

            let messageTime = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
            let isSender = senderId === userId;
            let messageHtml = `<div class="message ${isSender ? 'sent' : 'received'}">` +
                `<p><b>${isSender ? "You" : senderId}:</b> ${message} <sub class="msg-time">${messageTime}</sub></p></div>`;

            $("#chatBox").append(messageHtml);
            $("#chatBox").scrollTop($("#chatBox")[0].scrollHeight);
        });

        $("#sendBtn").click(function () {
            let message = $("#messageInput").val().trim();
            if (!message) {
                alert("Message cannot be empty!");
                return;
            }
            if (!otherUserId) {
                alert("Please select a user before sending a message.");
                return;
            }

            let messageTime = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

            $.ajax({
                url: "http://localhost:5136/api/chat/send",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({ senderId: userId, receiverId: otherUserId, content: message }),
                success: function () {
                    let messageHtml = `<div class="message sent">` +
                        `<p><b>You:</b> ${message} <sub class="msg-time">${messageTime}</sub></p></div>`;
                    $("#chatBox").append(messageHtml);
                    $("#messageInput").val("");
                    $("#chatBox").scrollTop($("#chatBox")[0].scrollHeight);
                },
                error: function (xhr) {
                    alert("Message failed to send. Server response: " + xhr.responseText);
                    console.error("Chat send error:", xhr.responseText);
                }
            });

            connection.invoke("SendMessage", userId, otherUserId, message)
                .catch(err => console.error("SignalR SendMessage Error:", err));
        });
    });
</script>

<style>
    .chat-container {
        max-width: 600px;
        margin: 20px auto;
        padding: 10px;
        border-radius: 10px;
        background: #f8f9fa;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    .chat-box {
        height: 400px;
        overflow-y: auto;
        border: 1px solid #ccc;
        padding: 10px;
        background: #fff;
    }

    .message {
        max-width: 75%;
        padding: 8px 12px;
        margin: 5px;
        border-radius: 10px;
        word-wrap: break-word;
    }

    .sent {
        background: #8fd657;
        float: right;
        text-align: right;
        clear: both;
    }

    .received {
        background: #ffffff;
        float: left;
        text-align: left;
        border: 1px solid #ccc;
        clear: both;
    }

    .date-separator {
        text-align: center;
        font-size: 12px;
        color: #888;
        margin: 10px 0;
    }

    .msg-time {
        font-size: 10px;
        color: #666;
    }
</style>
