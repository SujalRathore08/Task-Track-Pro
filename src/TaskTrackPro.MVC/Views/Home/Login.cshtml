@{
    Layout = "_AuthLayout";
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<div class="login-bg-wrapper d-flex flex-column">
    <div class="login-logo-header d-flex align-items-center bg-danger">
        <a href="#" class="login-logo-wrapper">
            <img src="~/css/Default/images/LogoImage.png" class="login-logo-img" alt="TaskTrackPro" />
        </a>
    </div>
    <div class="login-graphic-wrapper flex-1 overflow-auto d-flex flex-wrap">
        <div class="login-left-wrapper animate-fade-in">
            <div>
                <img src="~/css/Default/images/Login_Graphics.svg" alt="TaskTrackPro"
                    class="login-graphice-img animate-fade-in" />
            </div>
        </div>
        <div class="login-right-wrapper animate-slide-in">
            <div class="loginpage-box-wrapper animate-slide-in">
                <h2 class="login-title text-dark font-bold animate-fade-in">Log In</h2>
                <form class="scrollable-form" id="loginForm">
                    <div class="loginpage-box-content">
                        <div class="form-group animate-slide-in">
                            <div class="custom-dropdown">
                                <select name="role" id="role" class="form-control">
                                    <option value="Admin">Admin</option>
                                    <option value="User">User</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group animate-slide-in">
                            <input type="email" class="k-textbox login-textbox" placeholder="Email" id="loginEmail"
                                name="loginEmail">
                            <span class="login-textbox-icon"><i class="icon-email"></i></span>
                        </div>
                        <div class="form-group animate-slide-in">
                            <input type="password" class="k-textbox login-textbox" placeholder="Password"
                                id="loginPassword" name="loginPassword">
                            <span class="login-textbox-icon"><i class="icon-locked"></i></span>
                        </div>
                        <div class="form-group pb-10 animate-slide-in">
                            <button type="submit" class="btn btn-primary k-button w100 loginbtn">Log In</button>
                        </div>
                        <div class="text-center animate-fade-in">
                            <span class="text-dark font-medium">Forgot Password?</span>
                            <a asp-action="Forgot" class="forgot-pwd btn-link-trans font-medium text-dark text-primary"
                                aria-label="Forgot password">Click here</a>
                        </div>
                        <p id="message" class="text-center text-danger"></p>
                        <div class="text-center animate-fade-in">
                            <span class="text-dark font-medium">Don't have an account?</span>
                            <a asp-action="Register"
                                class="forgot-pwd btn-link-trans font-medium text-dark text-primary">Register here</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<style>
    .animate-fade-in {
        animation: fadeIn 1s ease-in-out;
    }

    .animate-slide-in {
        animation: slideIn 1s ease-in-out;
    }

    .scrollable-form {
        max-height: 500px;
        overflow-y: auto;
        padding: 10px;
        scrollbar-width: none;
        -ms-overflow-style: none;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @@keyframes slideIn {
        from {
            transform: translateY(-20px);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .k-button {
        border-radius: 8px;
    }

    #loginPassword,
    #loginEmail,
    #role {
        border: solid 1px #dcdfe5;
        border-radius: 8px;
    }

    .error {
        color: red !important;
        font-size: 14px;
        display: block;
        margin-top: 5px;
    }
</style>
<script>
    $(document).ready(function () {
        $("#loginForm").validate({
            rules: {
                loginEmail: { required: true, email: true },
                loginPassword: { required: true }
            },
            messages: {
                loginEmail: { required: "Email is required", email: "Enter a valid email" },
                loginPassword: { required: "Password is required" }
            },
            submitHandler: function (form) {
                loginUser();
            }
        });

        function loginUser() {
            let formData = new FormData();
            formData.append("c_email", $('#loginEmail').val().trim());
            formData.append("c_password", $('#loginPassword').val().trim())
            formData.append("c_role", $('#role').val())
            $.ajax({
                url: 'http://localhost:5136/api/UserApi/Login',
                type: 'POST',
                contentType: false,
                processData: false,
                data: formData,
                success: function (response) {
                    console.log(response);
                    sessionStorage.setItem("userEmail", $('#loginEmail').val().trim());
                    @* sessionStorage.setItem("userId", response.data.c_uid); *@
                        @* console.log(response.data.c_uid); *@
                        @* sessionStorage.setItem("User", JSON.stringify(response.data)); *@
                        console.log(response);
                    if (response.role == "Admin") {
                        if (response.success) {
                            Swal.fire({
                                title: "Success!",
                                text: "Login successful!",
                                icon: "success",
                                confirmButtonText: "OK",
                                timer: 2000
                            }).then(() => {
                                window.location = '../Admin/Index';
                            });
                        }
                        else {
                            Swal.fire({
                                title: "Error!",
                                text: "Invalid Credentials",
                                icon: "error",
                                confirmButtonText: "OK"
                            });
                        }
                    }
                    else {
                        console.log(response.data.c_uid);
                        sessionStorage.setItem("User", JSON.stringify(response.data));
                        sessionStorage.setItem("userId", response.data.c_uid);
                        Swal.fire({
                            title: "Success!",
                            text: "Login successful!",
                            icon: "success",
                            confirmButtonText: "OK",
                            timer: 2000
                        }).then(() => {
                            window.location = '../User/Task';
                        });
                    }
                },
                error: function (xhr) {
                    Swal.fire({
                        title: "Error!",
                        text: "Invalid Credentials or You are not approved by Admin",
                        icon: "error",
                        confirmButtonText: "OK"
                    });
                }
            });
        }
    });
</script>
